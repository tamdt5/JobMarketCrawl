services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"     # cho các container trong docker network
      - "29092:29092"   # cho client chạy ngoài docker (Python, etc.)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  pinot-controller:
    image: apachepinot/pinot:1.0.0
    container_name: pinot-controller
    command: ["StartController", "-zkAddress", "zookeeper:2181"]
    ports:
      - "9000:9000"
    volumes:
      - ./pinot:/var/pinot/data
      - pinot_data:/var/pinot/data/persistent  # Giữ volume cho dữ liệu lâu dài
  pinot-server:
    image: apachepinot/pinot:1.0.0
    container_name: pinot-server
    command: ["StartServer", "-zkAddress", "zookeeper:2181"]
    volumes:
      - ./pinot:/var/pinot/data  # Mount thư mục docker/pinot
      - pinot_data:/var/pinot/data/persistent  # Giữ volume cho dữ liệu lâu dài
  pinot-broker:
    image: apachepinot/pinot:1.0.0
    container_name: pinot-broker
    command: ["StartBroker", "-zkAddress", "zookeeper:2181"]
    ports:
      - "8099:8099"

  pinot-minion:
    image: apachepinot/pinot:1.2.0
    container_name: pinot-minion
    command: ["StartMinion", "-zkAddress", "zookeeper:2181", "-clusterName", "PinotCluster"]
    depends_on:
      - pinot-controller
    environment:
      JAVA_OPTS: "-Xms512M -Xmx2G"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - pinot-controller

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  pinot_data:
  grafana_data: